
; An example of a syntatic form that might be defined in Parus
; implementation of a CASE-like branching structure

''case 'case define ; defines a mark word
1 'else define 		; else will always evaluate to true


( find 'strip_i 0 2 @ '< 1 'drop for ) 'strip define ; a helper function that cleans the stack until a label

( 
	case find 1 - @ ! ; get the conditional macro

	(  
		case find 1 - @ 'case-end_res define 	; get result
		case strip 								; clean up
		drop 
		case-end_res 							; push result and clean up
		'case-end_res delete
	)

	( 
		case find 1 = 							; check if no more case
		( case strip ) 							; if yes then clean up
		( case find 1 - @ drop end-case )   	; else continue to execute
		if ! 
	) ; else continue

	if ! 
) 'end-case define

3 'x define

; mark the start of the structure
case
	( x 3 < )   ( 'A outln )
	( x 3 = )   ( case ( 5 3 < ) ( 'C outln ) ( else ) ( 'D outln ) end-case )
	( else )    ( 'B outln )
end-case
; end-case is the actual macro which evaluate the structure

'x delete 
