
; An example of a syntatic form that might be defined in Parus
; implementation of a CASE-like branching structure

''CASE 'CASE DEF 	; a mark word
1 'else DEF 		; else will always evaluate to true


( FIND 'STRIP_i 0 2 @ '< 1 'DROP FOR ) 'STRIP DEF ; a helper function that cleans the stack until a label

( 
	CASE FIND 1 - @ ! ; get the conditional macro

	(  
		CASE FIND 1 - @ 'CASE-END_RES DEF  	; get result
		CASE STRIP 							; clean up
		DROP 
		CASE-END_RES 						; push result and clean up
		'CASE-END_RES DEL
	)

	( 
		CASE FIND 1 = 						; check if no more case
		( CASE STRIP ) 						; if yes then clean up
		( CASE FIND 1 - @ DROP END-CASE )   ; else continue to execute
		IF ! 
	) ; else continue

	IF ! 
) 'END-CASE DEF 

3 'x DEF

; mark the start of the structure
CASE
	( x 3 < )   ( 'A OUTLN )
	( x 3 = )   ( CASE ( 5 3 < ) ( 'C OUTLN ) ( else ) ( 'D OUTLN ) END-CASE )
	( else )    ( 'B OUTLN )
END-CASE
; END-CASE is the actual macro which evaluate the structure

'x DEL
